services:
  scrapy_service:
    build:
      dockerfile: Dockerfile
    container_name: scrapy
    volumes:
      - .:/usr/src/app
    ports:
      - '6080:6080'  # Expose the Scrapy HTTP API port
    depends_on:
      postgres_db:
        condition: service_healthy
      redis_db:
        condition: service_started
      mongo_db:
        condition: service_healthy
    environment:
      - SQL_NAME=${SQL_NAME}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

  postgres_db:
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=${SQL_NAME}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SQL_USER} -d ${SQL_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis_db:
    image: redis
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    # Uncomment the lines below if you wish to set a Redis password
    # command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    # environment:
    #   - REDIS_PASSWORD=${REDIS_PASSWORD}

  mongo_db:
    image: mongo
    container_name: mongo
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      # - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    command: ['mongod', '--bind_ip_all', '--auth', '--wiredTigerCacheSizeGB', '1', '--setParameter', 'enableLocalhostAuthBypass=0', '--logpath', '/dev/stdout', '--logappend']
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_INITDB_ROOT_USERNAME}", "--password", "${MONGO_INITDB_ROOT_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  mongo_data: